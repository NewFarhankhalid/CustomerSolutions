@model Installments.Models.ProblemSolutions


@{
    ViewBag.Title = "Problem Solutions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    body {
        font-family: Arial, Helvetica, sans-serif;
    }

    #output {
        border-radius: 5px;
        cursor: pointer;
        transition: 0.3s;
    }

        #output:hover {
            opacity: 0.7;
        }

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 170px;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(255,255,255); /* Fallback color */
        background-color: #f1f1f1; /* Black w/ opacity */
    }

    /* Modal Content (image) */
    .modal-content {
        margin: auto;
        display: block;
        width: 100%;
        max-width: 1000px;
    }

    /* Caption of Modal Image */
    #caption {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
        text-align: center;
        color: #ccc;
        padding: 10px 0;
        height: 150px;
    }

    /* Add Animation */
    .modal-content, #caption {
        -webkit-animation-name: zoom;
        -webkit-animation-duration: 0.6s;
        animation-name: zoom;
        animation-duration: 0.6s;
    }

    .close {
        position: absolute;
        top: 80px;
        right: 35px;
        color: black;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
    }

        .close:hover,
        .close:focus {
            color: #bbb;
            text-decoration: none;
            cursor: pointer;
        }
</style>
<div class="box">
    <div class="box-header" style="text-align: center;">
        <h3 class="box-title" style="font-weight: bold;">Problem Solutions</h3>
    </div>
    </div>
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-6">
            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">
                        Problem Solution
                        @if (Model.ProblemSolutionID == 0)
                        {
                            <small>(New)</small>
                        }
                        else
                        {
                            <small>(Edit)</small>
                        }
                    </h3>
                </div>
                <div class="box-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ProblemSolutionID)
                        <table style="width:100%">
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.ProblemTitle, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.ProblemTitle, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProblemTitle, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })

                                    @Html.TextAreaFor(model => model.Description, new { @class = "textarea", @cols = 8, @rows = 8, id = "Description", name = "Description" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                                </td>
                            </tr>
                            <tr>
                                @*<td>
                                        <input type="button" value="Save" onclick="SaveRecord()" class="btn btn-primary pull-right" />
                                    </td>*@
                                <td></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="box box-success">
                <div class="box-header">
                    <h3 class="box-title">Image / Photo</h3>
                </div>
                <div class="box-body">
                    <div class="col-md-5">
                        @{
                            if (Model.ProblemImage == null || Model.ProblemImage == "")
                            {
                                <img id="output" width="100" height="100" src="@Model.ProblemImage" />
                            }
                            else
                            {
                                <img id="output" width="100" height="100" src="@Url.Content(Model.ProblemImage)" />
                            }
                        }
                        <form id="uploadform1">
                            <input type="file" name="Imagefile" accept="image/*" onchange="loadFile(event)" id="imagefile">
                        </form>

                    </div>
                    <br />
                    <div class="col-md-12">
                        <br />
                        <input type="button" value="Back" onclick="BackToList()" class="btn btn-success" />
                        <input type="button" value="Save" onclick="SaveRecord(); return false;" class="btn btn-primary pull-right" />
                    </div>
                    <div id="myModal" class="modal">
                        <span class="close">&times;</span>
                        <img class="modal-content" id="img01">
                        <div id="caption"></div>
                    </div>
                    <script>
                        var loadFile = function (event) {
                            var output = document.getElementById('output');
                            output.src = URL.createObjectURL(event.target.files[0]);
                            output.onload = function () {
                                URL.revokeObjectURL(output.src) // free memory
                            }
                        };
                    </script>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <style>
        .col-md-2 {
            max-width: 100%;
        }
    </style>


    <link href="~/bower_components/summernote/summernote-bs4.css" rel="stylesheet" />
    <script src="~/bower_components/summernote/summernote-bs4.js"></script>


    <script>
    $(document).keyup(function (e) {
        if (e.which === 27) {
            var modal = document.getElementById("myModal");
            modal.style.display = "none";
        }
    });
    function BackToList() {
        window.location.href = '/ProblemSolutions/Index';
    }

    var modal = document.getElementById("myModal");
    // Get the image and insert it inside the modal - use its "alt" text as a caption
    var img = document.getElementById("output");
    var modalImg = document.getElementById("img01");
    var captionText = document.getElementById("caption");
    img.onclick = function () {
        modal.style.display = "block";
        modalImg.src = this.src;
        captionText.innerHTML = this.alt;
    }
    var span = document.getElementsByClassName("close")[0];
    span.onclick = function () {
        modal.style.display = "none";
    }

    $('#Description').summernote();

    var Problem = '@ViewBag.ProblemImage';
    var output = $('#output').attr('src');
    function SaveRecord() {
        var objProblem = {};
        objProblem.ProblemSolutionID = $("#ProblemSolutionID").val();
        objProblem.ProblemTitle = $("#ProblemTitle").val();
        objProblem.Description = $("#Description").val();
        objProblem.ProblemImage = $("#imagefile").val();

        if (objProblem.ProblemTitle == "" || objProblem.ProblemTitle == 0) {
            bootbox.alert("Please Enter Proper Problem Title");
            $("#ProblemTitle").val();
            return;
        }
        //if (document.getElementById("imagefile").files[0] == null) {
        //    bootbox.alert("Please select image, images are compulsory");
        //    return;
        //}

        var flagImageExist = 0;

        //if (document.getElementById("imagefile").files.length == 0) {
        //    flagImageExist = 0;
        //}
        //else {
        //    flagImageExist = 1;
        //}
        var flagImageExist = 0;
        if (document.getElementById("imagefile").files[0] == null) {
            if (Problem = output) {
                objProblem.ProblemImage = Problem;

            }
        }
        else {
            objProblem.ProblemImage = objProblem.ProblemImage;
        }



        if (document.getElementById("imagefile").files.length == 0) {
            if (Problem != undefined) {
            if (Problem.length == 0 || output.length == 0) {
                flagImageExist = 0;
                return;
            }
            else {
                if (objProblem.ProblemImage == Problem) {
                    flagImageExist = 0;
                }
                else {
                    flagImageExist = 1;
                }
                }
            }

        }
        else {
            flagImageExist = 1;
        }


        $.ajax({

            type: "POST",
            url: "/ProblemSolutions/Create",
            data: JSON.stringify({ objProblem }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,

            success: function (r) {
                var data = r.split(",");
                if (data[0] == 'true') {
                    objProblem.ProblemSolutionID = data[1];
                    if (flagImageExist == 0) {
                        window.location.href = "/ProblemSolutions/Index";
                    }
                }
            },
            error: function (x, e) {
                bootbox.alert("Error");
                return;
            },
        });

        if (flagImageExist == 1) {
            var formData = new FormData();
            formData.append("txtfile", document.getElementById("imagefile").files[0], (objProblem.ProblemSolutionID + ",1"));
            var problemSolutionID = objProblem.ProblemSolutionID
            var reqUrl = "/ProblemSolutions/SaveOrUpdateImage";
            $.ajax({
                type: "POST",
                url: reqUrl,
                async: false,
                contentType: false,//"application/json; charset=utf-8",
                processData: false,
                data: formData,
                success: function (data) {
                    window.location.href = "/ProblemSolutions/Index";
                },
                error: function (data) {
                    bootbox.alert("Error image uploading");
                }
            });
        }
        else {
            window.location.href = "/ProblemSolutions/Index";
        }

    }
    </script>
