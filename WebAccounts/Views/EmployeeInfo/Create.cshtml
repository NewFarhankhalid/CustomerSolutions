@model Installments.Models.EmployeeInfo

@{
    ViewBag.Title = "Employee Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        @if (ViewBag.Error != null)
        {
        <div class="alert alert-danger">@ViewBag.Error</div>
       
        }
        </div>
    <div class="row">
        <div class="col-md-12">
            <div class="box box-solid">
                <div class="box-header">
                    <h3 class="box-title text-danger">Employee Information <small>(New)</small></h3>
                </div>
                <div class="box-body">
                    
                  <div class="row">
                      <div class="col-md-6">
                          @*<div class="col-md-6">
                              @Html.LabelFor(model => model.BranchID, htmlAttributes: new { @class = "control-label " })
                              @Html.DropDownListFor(model => model.BranchID, (SelectList)ViewBag.BranchList, "Select Branch", htmlAttributes: new { @class = "form-control Select2", id = "ddlbranchinfo" })
                              @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
                          </div>*@
                          <div class="col-md-6">
                              @Html.LabelFor(model => model.DesignationID, htmlAttributes: new { @class = "control-label " })

                              @Html.DropDownListFor(model => model.DesignationID, (SelectList)ViewBag.DesignationList, "Select Designation", htmlAttributes: new { @class = "form-control Select2" })
                              @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                              </div>
                          </div>
                      </div>
                   
                  
                </div>
            </div>
        </div>
        </div>
<div class="row">
  
    <div class="col-md-7">
        <div class="box box-primary">
            <div class="box-header">

                <h3 class="box-title">Personal Details</h3>
            </div>
            <div class="box-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <table style="width:100%">

                        <tbody>
                       
                            <tr>
                                <td class="col-md-6">

                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })

                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                </td>

                                <td class="col-md-6">

                                    @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label " })

                                    @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })

                                </td>
                            </tr>
                            <tr>
                                <td class="col-md-6">

                                    @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label " })

                                    @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })

                                </td>
                                <td class="col-md-6">

                                    @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label " })

                                    @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })

                                </td>


                            </tr>
                            <tr>
                                <td class="col-md-6">

                                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label " })

                                    @Html.DropDownListFor(model => model.Gender, (SelectList)ViewBag.GenderList, "Select Gender", htmlAttributes: new { @class = "form-control", id = "ddlbranchinfo" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

                                </td>
                                <td class="col-md-6">
                                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label " })

                                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", id = "dtpdob" } })

                                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })

                                </td>

                            </tr>
                            <tr>
                                <td class="col-md-3">

                                    @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label " })

                                    @Html.EditorFor(model => model.BloodGroup, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })

                                </td>

                              </tr>
                        </tbody>
                    </table>
                </div>
            </div>

        </div>
        <div class="box box-danger">
            <div class="box-header">
                <h3 class="box-title">Employeement Details</h3>
            </div>
            <div class="box-body">
                <table style="width:100%">
                    <tr>
                    <td class="col-md-3">

                        @Html.LabelFor(model => model.GPFundNo, htmlAttributes: new { @class = "control-label " })

                        @Html.EditorFor(model => model.GPFundNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GPFundNo, "", new { @class = "text-danger" })

                    </td>
                    <td class="col-md-3">

                        @Html.LabelFor(model => model.KFFund, htmlAttributes: new { @class = "control-label " })

                        @Html.EditorFor(model => model.KFFund, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.KFFund, "", new { @class = "text-danger" })

                    </td>
                    <td class="col-md-3">

                        @Html.LabelFor(model => model.Other, htmlAttributes: new { @class = "control-label " })

                        @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })

                    </td>
                  
                    </tr>
                    <tr>
                        <td class="col-md-3">

                            @Html.LabelFor(model => model.Qualifications, htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.Qualifications, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Qualifications, "", new { @class = "text-danger" })

                        </td>
                        <td class="col-md-3">

                            @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "control-label " })


                            @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @class = "form-control", id = "dtpjoiningdate" } })
                            @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })

                        </td>

                        <td class="col-md-3">

                            @Html.LabelFor(model => model.ConfirmationDate, htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.ConfirmationDate, new { htmlAttributes = new { @class = "form-control", id = "dtpconfirmationdate" } })
                            @Html.ValidationMessageFor(model => model.ConfirmationDate, "", new { @class = "text-danger" })

                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="box box-danger">
            <div class="box-header">
                <h3 class="box-title">Contact Information</h3>
            </div>
            <div class="box-body">
                <table style="width:100%">
                    <tr>

                        <td class="col-md-3">

                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                        </td>
                        <td class="col-md-3">

                            @Html.LabelFor(model => model.Domicile, htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.Domicile, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Domicile, "", new { @class = "text-danger" })

                        </td>

                    </tr>

                    <tr>
                        <td class="col-md-3">

                            @Html.LabelFor(model => model.HomeTel, htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.HomeTel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HomeTel, "", new { @class = "text-danger" })

                        </td>
                        <td class="col-md-3">

                            @Html.LabelFor(model => model.MobileTel, htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.MobileTel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MobileTel, "", new { @class = "text-danger" })

                        </td>
                        </tr>
                </table>
            </div>
        </div>


    </div>
        <div class="col-md-5">
            <div class="box box-warning">
                <div class="box-header">
                    <h3 class="box-title">Salary Details</h3>
                </div>
                <div class="box-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <table style="width:100%">
                            <tr>
                                <td class="col-md-3">

                                    @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label " })

                                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })

                                </td>
                                <td class="col-md-3">

                                    @Html.LabelFor(model => model.UtilityAllowance, htmlAttributes: new { @class = "control-label " })

                                    @Html.EditorFor(model => model.UtilityAllowance, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UtilityAllowance, "", new { @class = "text-danger" })

                                </td>
                                <td class="col-md-3">

                                    @Html.LabelFor(model => model.MedicalAllowance, htmlAttributes: new { @class = "control-label " })

                                    @Html.EditorFor(model => model.MedicalAllowance, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MedicalAllowance, "", new { @class = "text-danger" })

                                </td>
                            </tr>
                          
                        </table>


                    </div>

                   
                </div>
            </div>

            <div class="box box-success">
                <div class="box-header">
                    <h3 class="box-title">Bank Account Details</h3>
                </div>
                <div class="box-body">
                    <table style="width:100%">
                        <tr>
                            <td class="col-md-8">

                                @Html.LabelFor(model => model.BankAccount, htmlAttributes: new { @class = "control-label " })

                                @Html.EditorFor(model => model.BankAccount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BankAccount, "", new { @class = "text-danger" })

                            </td>
                        </tr>
                        <tr>
                            <td class="col-md-8">

                                @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label " })

                                @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })

                            </td>
                        </tr>
                        <tr>
                            <td class="col-md-8">

                                @Html.LabelFor(model => model.BankBranch, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.BankBranch, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BankBranch, "", new { @class = "text-danger" })

                            </td>
                        </tr>
                    </table>

                </div>
            </div>

            <div class="box box-solid">
                <div class="box-header">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary pull-right" />
                        </div>
                    </div>
                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
                </div>

        </div>
    </div>
    }
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <style>
        .col-md-2 {
            max-width: 100%;
        }
    </style>
    <script>
        $(function () {
            $('#dtpdob').datepicker({
                autoclose: true
            });

            $('#dtpjoiningdate').datepicker({
                autoclose: true
            })

            $('#dtpconfirmationdate').datepicker({
                autoclose: true
            })
            //$('#dtpjoiningdate').datetimepicker({ format: 'DD/MM/YYYY' });
            //$('#dtpconfirmationdate').datetimepicker({ format: 'DD/MM/YYYY' });

        });
    </script>
