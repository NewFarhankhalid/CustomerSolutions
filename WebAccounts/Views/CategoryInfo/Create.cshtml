@model Installments.Models.CategoryInfo


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@Html.AntiForgeryToken()
<div class="row">
    <div class="col-md-6">
        <div class="box">
            <div class="box-header">
                <h3 class="box-title">Category<small>(New)</small></h3>
            </div>
            <div class="box-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <table style="width:100%">
                            <tr>
                                <td>
                                    <label class="control-label ">Parent Category </label>
                                    @Html.DropDownListFor(model => model.ParentID, (SelectList)ViewBag.CategoryInfo, "- Select -", htmlAttributes: new { @class = "form-control Select2" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.CategoryTitle, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.CategoryTitle, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CategoryTitle, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div style="margin-left:20px" class="checkbox">
                                        @Html.CheckBoxFor(model => model.Inactvie) Inactive
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                @*<td>
                                    <input type="button" value="Save" onclick="SaveRecord()" class="btn btn-primary pull-right" />
                                </td>*@
                                <td></td>
                            </tr>
                        </table>
                </div>
            </div>
        </div>
    </div>
        <div class="col-md-6">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Image / Photo</h3>
                </div>
                <div class="box-body">
                    <div class="col-md-5">
                        @{
                            if (Model.CategoryImage == null || Model.CategoryImage == "")
                            {
                                <img id="output" width="100" height="100" src="@Model.CategoryImage" />
                            }
                            else
                            {
                                <img id="output" width="100" height="100" src="@Url.Content(Model.CategoryImage)" />
                            }
                        }
                        <form id="uploadform1">
                            <input type="file" name="Imagefile" accept="image/*" onchange="loadFile(event)" id="imagefile">
                        </form>
                        <div>

                            <input type="button" value="Save" onclick="SaveRecord(); return false;"   class="btn btn-primary pull-right" />
                            
                        </div>
                    </div>
                    
                    <script>
                        var loadFile = function (event) {
                            var output = document.getElementById('output');
                            output.src = URL.createObjectURL(event.target.files[0]);
                            output.onload = function () {
                                URL.revokeObjectURL(output.src) // free memory
                            }
                        };
                    </script>
                </div>
                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style>
    .col-md-2 {
        max-width: 100%;
    }
</style>





<script>
 
    function SaveRecord() {
        var objproduct = {};
        objproduct.ParentID = $("#ParentID").val();
        objproduct.CategoryTitle = $("#CategoryTitle").val();
        if ($('#Inactvie').is(":checked")) {
            objproduct.InActive = true;  // it is checked
        }
        else {
            objproduct.InActive = false;  // it is checked

        }
        objproduct.Description = $("#Description").val();
        objproduct.CategoryImage = $("#imagefile").val();
        
        if (objproduct.CategoryTitle == "" || objproduct.CategoryTitle == 0) {
            bootbox.alert("Please Enter Proper Category Name");
            $("#CategoryTitle").val();
            return;
        }
        if (document.getElementById("imagefile").files[0] == null) {
            bootbox.alert("Please select image, images are compulsory");
            return;
        }

        var flagImageExist = 0;

        if (document.getElementById("imagefile").files.length == 0) {
            flagImageExist = 0;
        }
        else {
            flagImageExist = 1;
        }
        $.ajax({

            type: "POST",
            url: "/CategoryInfo/Create",
            data: JSON.stringify({ objproduct }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            
            success: function (r) {
                var data = r.split(",");
                if (data[0] == 'rcode') {
                    bootbox.alert("Product Code already exists Please enter different Product Code");
                    $("#ParentID").focus();
                    return;
                }
                else if (data[0] == 'true') {
                    objproduct.CatagoryID = data[1];
                    if (flagImageExist == 0) {
                        window.location.href = "/CategoryInfo/Index";
                    }
                }
            },
            error: function (x, e) {
                bootbox.alert("Error");
                return;
            },
        });


        if (flagImageExist == 1) {
            var formData = new FormData();
            formData.append("txtfile", document.getElementById("imagefile").files[0], (objproduct.CatagoryID + ",1"));
            var categoryid = objproduct.CatagoryID
            var reqUrl = "/CategoryInfo/SaveOrUpdateImage";
            $.ajax({
                type: "POST",
                url: reqUrl,
                async: false,
                contentType: false,//"application/json; charset=utf-8",
                processData: false,
                data: formData,
                success: function (data) {
                    window.location.href = "/CategoryInfo/Index";
                },
                error: function (data) {
                    bootbox.alert("Error image uploading");
                }
            });
        }
        
    }
</script>